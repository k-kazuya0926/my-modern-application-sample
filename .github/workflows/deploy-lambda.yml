name: deploy-lambda
on:
  workflow_dispatch:
    inputs:
      env:
        type: environment
        required: true
        description: "環境名"
      function-name:
        type: choice
        options:
          - hello-world
          - tmp
          - read-and-write-s3
          - register-user
          - send-message
        required: true
        description: "Lambda関数名"
      image-tag:
        type: string
        required: true
        description: "コンテナイメージのタグ"
env:
  ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ github.event.repository.name }}-${{ inputs.env }}-github-actions
  SESSION_NAME: gh-oidc-${{ github.run_id }}-${{ github.run_attempt }}
  ECR_REPOSITORY_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ github.event.repository.name }}-${{ inputs.env }}-${{ inputs.function-name }}
defaults: # パイプエラーを拾えるようにデフォルトシェルを設定
  run:
    shell: bash
concurrency: # コミット追加時に古いワークフローの実行を自動キャンセル
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    timeout-minutes: 5
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4 # 一時クレデンシャルの取得
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          role-session-name: ${{ env.SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - uses: ./.github/actions/deploy-lambda/
        with:
          function-name: ${{ github.event.repository.name }}-${{ inputs.env }}-${{ inputs.function-name }}
          image-uri: ${{ env.ECR_REPOSITORY_URI }}:${{ inputs.image-tag }}
